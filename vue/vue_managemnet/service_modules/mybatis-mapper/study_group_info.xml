<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="study_group_info">
  <sql id="sql_where-study_group_info">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test="searchFilter.idx                     != undefined AND searchFilter.idx                     != ''"> AND A.idx                     = #{searchFilter.idx}                     </if>
      <if test="searchFilter.userIdx                 != undefined AND searchFilter.userIdx                 != ''"> AND A.user_idx                = #{searchFilter.userIdx}                 </if>
      <if test="searchFilter.seriesCode              != undefined AND searchFilter.seriesCode              != ''"> AND A.series_code             = #{searchFilter.seriesCode}              </if>
      <if test="searchFilter.dailyStudyPeriodCode    != undefined AND searchFilter.dailyStudyPeriodCode    != ''"> AND A.daily_study_period_code = #{searchFilter.dailyStudyPeriodCode}    </if>
      <if test="searchFilter.openTypeCode            != undefined AND searchFilter.openTypeCode            != ''"> AND A.open_type_code          = #{searchFilter.openTypeCode}            </if>
      <if test="searchFilter.password                != undefined AND searchFilter.password                != ''"> AND A.password                = #{searchFilter.password}                </if>
      <if test="searchFilter.title                   != undefined AND searchFilter.title                   != ''"> AND A.title          LIKE CONCAT('%', #{searchFilter.title} ,'%')       </if>
      <if test="searchFilter.member                  != undefined AND searchFilter.member                  != ''"> AND (F.count IS NULL OR F.count &lt; 5)                                 </if>
      <if test="searchFilter.isEmpty                 != undefined AND searchFilter.isEmpty                 != ''"> AND (F.count IS NULL OR F.count &lt; 5)                                 </if>
      <if test="searchFilter.introduction            != undefined AND searchFilter.introduction            != ''"> AND A.introduction            = #{searchFilter.introduction}            </if>
      <choose>
        <when test="searchFilter.registerDate.s            != '' and searchFilter.registerDate.e            != ''">AND register_date           between DATE_FORMAT(#{searchFilter.registerDate.s},            '%Y-%m-%d') AND DATE_ADD(DATE_FORMAT(#{searchFilter.registerDate.e},            '%Y-%m-%d'), INTERVAL 1 DAY) </when>
        <when test="searchFilter.registerDate.s            != '' and searchFilter.registerDate.e            == ''">AND register_date           &gt;    DATE_FORMAT(#{searchFilter.registerDate.s},            '%Y-%m-%d')  </when>
        <when test="searchFilter.registerDate.s            == '' and searchFilter.registerDate.e            != ''">AND register_date           &lt;                                                                           DATE_ADD(DATE_FORMAT(#{searchFilter.registerDate.e},            '%Y-%m-%d'), INTERVAL 1 DAY) </when>
      </choose>
    </trim>
  </sql>

  <select id="select-list">
    SELECT 
      COUNT(A.idx) OVER()       AS count,
      A.idx                     AS idx,
      A.user_idx                AS userIdx,
      A.series_code             AS seriesCode,
      A.daily_study_period_code AS dailyStudyPeriodCode,
      A.open_type_code          AS openTypeCode,
      A.password                AS password,
      A.title                   AS title,
      A.introduction            AS introduction,
      A.register_date           AS registerDate,
    B.name AS series,
    C.name AS studyPeriod,
    D.name AS openType,
    E.nickname AS owner,
    F.count AS member
    FROM study_group_info A 
    LEFT JOIN code_info B ON B.code = A.series_code AND B.category_code = 1001
    LEFT JOIN code_info C ON C.code = A.daily_study_period_code AND C.category_code = 1007
    LEFT JOIN code_info D ON D.code = A.open_type_code AND D.category_code = 1005
    LEFT JOIN user_info E ON E.idx = A.user_idx
    LEFT JOIN ( SELECT F.study_group_idx, COUNT(study_group_idx) AS COUNT FROM study_group_user F GROUP BY F.study_group_idx	) F ON F.study_group_idx = A.idx
    <include refid="sql_where-study_group_info" />
    ORDER BY A.register_date DESC
    <if test="searchFilter.page             != undefined AND searchFilter.page             != ''">
    LIMIT 5 OFFSET ${searchFilter.page}
    </if>
  </select>

   <select id="select-mylist">
    SELECT 
      COUNT(A.idx) OVER()       AS count,
      A.idx                     AS idx,
      A.user_idx                AS userIdx,
      A.series_code             AS seriesCode,
      A.daily_study_period_code AS dailyStudyPeriodCode,
      A.open_type_code          AS openTypeCode,
      A.password                AS password,
      A.title                   AS title,
      A.introduction            AS introduction,
      A.register_date           AS registerDate,
    B.name AS series,
    C.name AS studyPeriod,
    D.name AS openType,
    E.nickname AS owner,
    F.count AS member
    FROM study_group_info A 
    LEFT JOIN code_info B ON B.code = A.series_code AND B.category_code = 1001
    LEFT JOIN code_info C ON C.code = A.daily_study_period_code AND C.category_code = 1007
    LEFT JOIN code_info D ON D.code = A.open_type_code AND D.category_code = 1005
    LEFT JOIN user_info E ON E.idx = A.user_idx
    LEFT JOIN ( SELECT F.study_group_idx, COUNT(study_group_idx) AS COUNT FROM study_group_user F GROUP BY F.study_group_idx	) F ON F.study_group_idx = A.idx
    INNER JOIN study_group_user G ON G.user_idx = ${searchFilter.userIdx2} AND G.study_group_idx = A.idx
    <include refid="sql_where-study_group_info" />
    ORDER BY A.register_date DESC
    <if test="searchFilter.page             != undefined AND searchFilter.page             != ''">
    LIMIT 5 OFFSET ${searchFilter.page}
    </if>
  </select>

  <select id="select-object">
    SELECT 
      COUNT(A.idx) OVER()       AS count,
      A.idx                     AS idx,
      A.user_idx                AS userIdx,
      A.series_code             AS seriesCode,
      A.daily_study_period_code AS dailyStudyPeriodCode,
      A.open_type_code          AS openTypeCode,
      A.password                AS password,
      A.title                   AS title,
      A.introduction            AS introduction,
      A.register_date           AS registerDate,
    B.name AS series,
    C.name AS studyPeriod,
    D.name AS openType,
    E.nickname AS owner,
    F.count AS member
    FROM study_group_info A 
    LEFT JOIN code_info B ON B.code = A.series_code AND B.category_code = 1001
    LEFT JOIN code_info C ON C.code = A.daily_study_period_code AND C.category_code = 1007
    LEFT JOIN code_info D ON D.code = A.open_type_code AND D.category_code = 1005
    LEFT JOIN user_info E ON E.idx = A.user_idx
    LEFT JOIN ( SELECT F.study_group_idx, COUNT(study_group_idx) AS COUNT FROM study_group_user F GROUP BY F.study_group_idx	) F ON F.study_group_idx = A.idx
    <include refid="sql_where-study_group_info" />
  </select>

  <insert id="insert-object">
    insert into study_group_info (
      user_idx 
      , series_code 
      , daily_study_period_code 
      , open_type_code 
      <if test="insertData.password                != undefined and insertData.password               != ''">, password               </if>
      , title 
      , introduction 
      <if test="insertData.registerDate            != undefined and insertData.registerDate           != ''">, register_date          </if>
    ) values (
      #{insertData.userIdx}
      , #{insertData.seriesCode}
      , #{insertData.dailyStudyPeriodCode}
      , #{insertData.openTypeCode}
      <if test="insertData.password                != undefined and insertData.password               != ''">, #{insertData.password}                </if>
      , #{insertData.title}
      , #{insertData.introduction}
      <if test="insertData.registerDate            != undefined and insertData.registerDate           != ''">, #{insertData.registerDate}            </if>
    )
  </insert>

  <update id="update-object">
    update study_group_info A
    <trim prefix="SET" prefixOverrides=",">
      <if test="updateData.userIdx                 != undefined and updateData.userIdx                != ''">, user_idx                = #{updateData.userIdx}                 </if>
      <if test="updateData.seriesCode              != undefined and updateData.seriesCode             != ''">, series_code             = #{updateData.seriesCode}              </if>
      <if test="updateData.dailyStudyPeriodCode    != undefined and updateData.dailyStudyPeriodCode   != ''">, daily_study_period_code = #{updateData.dailyStudyPeriodCode}    </if>
      <if test="updateData.openTypeCode            != undefined and updateData.openTypeCode           != ''">, open_type_code          = #{updateData.openTypeCode}            </if>
      <if test="updateData.password                != undefined and updateData.password               != ''">, password                = #{updateData.password}                </if>
      <if test="updateData.title                   != undefined and updateData.title                  != ''">, title                   = #{updateData.title}                   </if>
      <if test="updateData.introduction            != undefined and updateData.introduction           != ''">, introduction            = #{updateData.introduction}            </if>
      <if test="updateData.registerDate            != undefined and updateData.registerDate           != ''">, register_date           = #{updateData.registerDate}            </if>
    </trim>
    <include refid="sql_where-study_group_info" />
  </update>

  <delete id="delete-object">
    delete from study_group_info
    where idx = #{searchFilter.idx}
  </delete>

</mapper>
